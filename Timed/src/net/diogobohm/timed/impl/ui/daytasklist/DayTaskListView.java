/**
 * TODO: define a license.
 */
package net.diogobohm.timed.impl.ui.daytasklist;

import com.jgoodies.binding.adapter.Bindings;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import net.diogobohm.timed.impl.ui.daytasklist.createmenu.TaskItemCreateMenu;
import net.diogobohm.timed.impl.ui.tasklist.TaskListPanel;

/**
 *
 * @author diogo.bohm
 */
public class DayTaskListView extends javax.swing.JPanel {

    private final DayTaskListModel model;
    private final TaskListPanel taskListPanel;
    private final ActionListener newTaskAction;

    public DayTaskListView(DayTaskListModel model, TaskListPanel taskListPanel, ActionListener newTaskAction) {
        this.taskListPanel = taskListPanel;
        this.model = model;
        this.newTaskAction = newTaskAction;

        initComponents();

        this.model.getExpandHolder().addPropertyChangeListener(createExpandChangeListener());
        refreshTaskList();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        toggleExpandLabel = new javax.swing.JLabel();
        dayNameLabel = new javax.swing.JLabel();
        workedHoursLabel = new javax.swing.JLabel();
        taskListPanel2 = taskListPanel;

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        headerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                headerPanelMouseClicked(evt);
            }
        });

        toggleExpandLabel.setText(">");
        Bindings.bind(toggleExpandLabel, model.getExpandLabelHolder());

        dayNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dayNameLabel.setText("Day name");
        Bindings.bind(dayNameLabel, model.getDateNameHolder());

        workedHoursLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        workedHoursLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        workedHoursLabel.setText("DayWorkedHours");
        Bindings.bind(workedHoursLabel, model.getDayWorkedTimeHolder());

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(toggleExpandLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dayNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workedHoursLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(toggleExpandLabel)
                .addComponent(dayNameLabel)
                .addComponent(workedHoursLabel))
        );

        add(headerPanel);

        taskListPanel2.setOpaque(false);
        add(taskListPanel2);
    }// </editor-fold>//GEN-END:initComponents

    private void headerPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            model.toggleExpand();
        } else if (evt.getButton() == MouseEvent.BUTTON3) {
            TaskItemCreateMenu menu = new TaskItemCreateMenu(newTaskAction);
            menu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_headerPanelMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dayNameLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel taskListPanel2;
    private javax.swing.JLabel toggleExpandLabel;
    private javax.swing.JLabel workedHoursLabel;
    // End of variables declaration//GEN-END:variables

    private PropertyChangeListener createExpandChangeListener() {
        return new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                refreshTaskList();
            }
        };
    }

    private void refreshTaskList() {
        boolean expand = model.getExpandHolder().booleanValue();

        remove(taskListPanel);

        if (expand) {
            add(taskListPanel);
        }

        revalidate();
        repaint();
    }
}
