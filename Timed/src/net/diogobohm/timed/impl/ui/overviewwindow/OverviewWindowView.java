/**
 * TODO: define a license.
 */
package net.diogobohm.timed.impl.ui.overviewwindow;

import com.jgoodies.binding.adapter.Bindings;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import net.diogobohm.timed.impl.ui.daytasklist.DayTaskListController;

/**
 *
 * @author diogo.bohm
 */
public class OverviewWindowView extends javax.swing.JFrame {

    private final OverviewWindowModel model;
    private final ActionListener filterAction;

    /**
     * Creates new form OverviewWindowView
     */
    public OverviewWindowView(OverviewWindowModel model, ActionListener filterAction) {
        this.model = model;
        this.filterAction = filterAction;

        initComponents();

        this.model.getTaskListsHolder().addPropertyChangeListener(createTaskListChangeAction());
        updateTaskList();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        startDayLabel = new javax.swing.JLabel();
        startDayFilterField = new javax.swing.JTextField();
        endDayLabel = new javax.swing.JLabel();
        endDayFilterField = new javax.swing.JTextField();
        filterButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dayTaskListContainerPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 600));
        setPreferredSize(new java.awt.Dimension(600, 600));

        startDayLabel.setText("From");

        startDayFilterField.setText("startDayFilter");
        Bindings.bind(startDayFilterField, model.getStartDateHolder());

        endDayLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endDayLabel.setText("to");

        endDayFilterField.setText("endDayFilter");
        Bindings.bind(endDayFilterField, model.getEndDateHolder());

        filterButton.setText("Filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startDayFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(endDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endDayFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(filterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startDayLabel)
                    .addComponent(startDayFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endDayLabel)
                    .addComponent(endDayFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(headerPanel, java.awt.BorderLayout.NORTH);

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        dayTaskListContainerPanel.setMaximumSize(new java.awt.Dimension(30000, 30000));
        dayTaskListContainerPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        dayTaskListContainerPanel.setPreferredSize(new java.awt.Dimension(100, 100));
        dayTaskListContainerPanel.setLayout(new javax.swing.BoxLayout(dayTaskListContainerPanel, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane2.setViewportView(dayTaskListContainerPanel);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        filterAction.actionPerformed(evt);
    }//GEN-LAST:event_filterButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dayTaskListContainerPanel;
    private javax.swing.JTextField endDayFilterField;
    private javax.swing.JLabel endDayLabel;
    private javax.swing.JButton filterButton;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField startDayFilterField;
    private javax.swing.JLabel startDayLabel;
    // End of variables declaration//GEN-END:variables

    private PropertyChangeListener createTaskListChangeAction() {
        return new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                updateTaskList();
            }
        };
    }

    private void updateTaskList() {
        dayTaskListContainerPanel.removeAll();

        for (DayTaskListController taskListController : model.getTaskListsHolder().getValue()) {
            dayTaskListContainerPanel.add(taskListController.getView());
        }

        revalidate();
        repaint();
    }
}
